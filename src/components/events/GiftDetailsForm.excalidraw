{
  "type": "excalidraw",
  "version": 2,
  "source": "https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor",
  "elements": [
    {
      "id": "aNuTf_1YGDjM73A8eRljP",
      "type": "text",
      "x": -933.1109822591147,
      "y": 701.3334503173828,
      "width": 2413.91845703125,
      "height": 3100,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 1209758570,
      "version": 183,
      "versionNonce": 1455039510,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1754483242181,
      "link": null,
      "locked": false,
      "text": "<!--\n  GiftDetailsForm.vue\n  - Mobile-first form layout for wedding gift entry\n  - Ghana-optimized: touch targets, offline-friendly, clear comments\n-->\n\n<template>\n  <div class=\"bg-white rounded-lg shadow-md border-l-4 overflow-hidden\">\n    <!-- Section Header -->\n    <div class=\"bg-wedding-50 px-6 py-4 border-b border-wedding-100\">\n      <h2 class=\"text-lg font-semibold text-wedding-800 flex items-center\">\n        <!-- Gift Icon -->\n        <svg class=\"w-5 h-5 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <rect x=\"3\" y=\"8\" width=\"18\" height=\"13\" rx=\"2\" fill=\"none\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M12 8V21\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M3 12h18\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M7.5 8C6 8 4 6.5 4 5.5C4 4.5 6 4 7.5 5.5C9 7 7.5 8 7.5 8Z\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M16.5 8C18 8 20 6.5 20 5.5C20 4.5 18 4 16.5 5.5C15 7 16.5 8 16.5 8Z\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n        </svg>\n        Gift Information\n      </h2>\n      <p class=\"text-sm text-wedding-600 mt-1\">Giver, recipient, and gift details</p>\n    </div>\n    <!-- ===== Gift Details Form ===== -->\n    <form class=\"grid gap-4 md:grid-cols-2\" autocomplete=\"off\">\n      <!-- Giver Name -->\n      \n       <div class=\"p-2\">\n        <label for=\"giverName\" class=\"block text-sm font-medium text-gray-700\">Giver Name</label>\n        <input id=\"giverName\" v-model=\"localGift.giverName\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter giver's name\" />\n      </div>\n      <!-- Recipient Name -->\n      <div>\n        <label for=\"recipientName\" class=\"block text-sm font-medium text-gray-700\">Recipient Name</label>\n        <input id=\"recipientName\" v-model=\"localGift.recipientName\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter recipient's name\" />\n      </div>\n      <!-- Gift Description -->\n      <div class=\"md:col-span-2\">\n        <label for=\"giftDescription\" class=\"block text-sm font-medium text-gray-700\">Gift Description</label>\n        <input id=\"giftDescription\" v-model=\"localGift.giftDescription\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Describe the gift (e.g., Blender, Cash)\" />\n      </div>\n    \n      <!-- Phone Number -->\n      <div>\n        <label for=\"phoneNumber\" class=\"block text-sm font-medium text-gray-700\">Phone Number</label>\n        <input id=\"phoneNumber\" v-model=\"localGift.phoneNumber\" type=\"tel\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"e.g., 024XXXXXXX\" />\n      </div>\n      <!-- Gift Value -->\n      <div>\n        <label for=\"giftValue\" class=\"block text-sm font-medium text-gray-700\">Gift Value (GHS)</label>\n        <input id=\"giftValue\" v-model.number=\"localGift.giftValue\" type=\"number\" min=\"0\" step=\"0.01\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter value (if cash)\" />\n      </div>\n      <!-- Payment Mode -->\n      <div class=\"md:col-span-2 p-8\">\n        <label for=\"paymentMode\" class=\"block text-sm font-medium text-gray-700\">Payment Mode</label>\n        <select id=\"paymentMode\" v-model=\"localGift.paymentMode\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\">\n          <option value=\"Cash\">Cash</option>\n          <option value=\"Mobile Money\">Mobile Money</option>\n          <option value=\"Item\">Item</option>\n        </select>\n      </div>\n    \n    </form>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// ===== Types & Interfaces =====\n/**\n * GiftData: Structure for a single wedding gift entry\n * - All fields are required for receipt and record-keeping\n */\ninterface GiftData {\n  /**\n   * giverName: Name of the person giving the gift\n   */\n  giverName: string\n  /**\n   * recipientName: Name of the person or couple receiving the gift\n   */\n  recipientName: string\n  /**\n   * giftDescription: Description of the gift (e.g., Blender, Cash, Gift Card)\n   */\n  giftDescription: string\n  /**\n   * phoneNumber: Contact number of the giver (for follow-up or thanks)\n   */\n  phoneNumber: string\n  /**\n   * giftValue: Estimated value of the gift in GHS (for record-keeping)\n   */\n  giftValue: number\n  /**\n   * paymentMode: How the gift was delivered (e.g., Cash, Mobile Money, Item)\n   */\n  paymentMode: string\n}\n\n// ===== Props & Emits =====\nimport { reactive, watch } from 'vue'\nconst props = defineProps<{ modelValue: GiftData }>()\nconst emit = defineEmits<{ (e: 'update:modelValue', value: GiftData): void }>()\n\n// ===== Local State (Controlled by Parent) =====\nconst localGift = reactive<GiftData>({ ...props.modelValue })\n\n// Watch for changes from parent and update local state\nwatch(\n  () => props.modelValue,\n  (newVal) => {\n    Object.assign(localGift, newVal)\n  }\n)\n\n// Watch for changes in localGift and emit to parent\nwatch(\n  localGift,\n  (newVal) => {\n    emit('update:modelValue', { ...newVal })\n  },\n  { deep: true }\n)\n</script>",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "<!--\n  GiftDetailsForm.vue\n  - Mobile-first form layout for wedding gift entry\n  - Ghana-optimized: touch targets, offline-friendly, clear comments\n-->\n\n<template>\n  <div class=\"bg-white rounded-lg shadow-md border-l-4 overflow-hidden\">\n    <!-- Section Header -->\n    <div class=\"bg-wedding-50 px-6 py-4 border-b border-wedding-100\">\n      <h2 class=\"text-lg font-semibold text-wedding-800 flex items-center\">\n        <!-- Gift Icon -->\n        <svg class=\"w-5 h-5 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <rect x=\"3\" y=\"8\" width=\"18\" height=\"13\" rx=\"2\" fill=\"none\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M12 8V21\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M3 12h18\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M7.5 8C6 8 4 6.5 4 5.5C4 4.5 6 4 7.5 5.5C9 7 7.5 8 7.5 8Z\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n          <path d=\"M16.5 8C18 8 20 6.5 20 5.5C20 4.5 18 4 16.5 5.5C15 7 16.5 8 16.5 8Z\" stroke=\"#FF2E84\" stroke-width=\"2\"/>\n        </svg>\n        Gift Information\n      </h2>\n      <p class=\"text-sm text-wedding-600 mt-1\">Giver, recipient, and gift details</p>\n    </div>\n    <!-- ===== Gift Details Form ===== -->\n    <form class=\"grid gap-4 md:grid-cols-2\" autocomplete=\"off\">\n      <!-- Giver Name -->\n      \n       <div class=\"p-2\">\n        <label for=\"giverName\" class=\"block text-sm font-medium text-gray-700\">Giver Name</label>\n        <input id=\"giverName\" v-model=\"localGift.giverName\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter giver's name\" />\n      </div>\n      <!-- Recipient Name -->\n      <div>\n        <label for=\"recipientName\" class=\"block text-sm font-medium text-gray-700\">Recipient Name</label>\n        <input id=\"recipientName\" v-model=\"localGift.recipientName\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter recipient's name\" />\n      </div>\n      <!-- Gift Description -->\n      <div class=\"md:col-span-2\">\n        <label for=\"giftDescription\" class=\"block text-sm font-medium text-gray-700\">Gift Description</label>\n        <input id=\"giftDescription\" v-model=\"localGift.giftDescription\" type=\"text\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Describe the gift (e.g., Blender, Cash)\" />\n      </div>\n    \n      <!-- Phone Number -->\n      <div>\n        <label for=\"phoneNumber\" class=\"block text-sm font-medium text-gray-700\">Phone Number</label>\n        <input id=\"phoneNumber\" v-model=\"localGift.phoneNumber\" type=\"tel\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"e.g., 024XXXXXXX\" />\n      </div>\n      <!-- Gift Value -->\n      <div>\n        <label for=\"giftValue\" class=\"block text-sm font-medium text-gray-700\">Gift Value (GHS)</label>\n        <input id=\"giftValue\" v-model.number=\"localGift.giftValue\" type=\"number\" min=\"0\" step=\"0.01\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\" placeholder=\"Enter value (if cash)\" />\n      </div>\n      <!-- Payment Mode -->\n      <div class=\"md:col-span-2 p-8\">\n        <label for=\"paymentMode\" class=\"block text-sm font-medium text-gray-700\">Payment Mode</label>\n        <select id=\"paymentMode\" v-model=\"localGift.paymentMode\" required class=\"mt-1 block w-full rounded-lg border-gray-300 focus:border-wedding-500 focus:ring-wedding-500\">\n          <option value=\"Cash\">Cash</option>\n          <option value=\"Mobile Money\">Mobile Money</option>\n          <option value=\"Item\">Item</option>\n        </select>\n      </div>\n    \n    </form>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// ===== Types & Interfaces =====\n/**\n * GiftData: Structure for a single wedding gift entry\n * - All fields are required for receipt and record-keeping\n */\ninterface GiftData {\n  /**\n   * giverName: Name of the person giving the gift\n   */\n  giverName: string\n  /**\n   * recipientName: Name of the person or couple receiving the gift\n   */\n  recipientName: string\n  /**\n   * giftDescription: Description of the gift (e.g., Blender, Cash, Gift Card)\n   */\n  giftDescription: string\n  /**\n   * phoneNumber: Contact number of the giver (for follow-up or thanks)\n   */\n  phoneNumber: string\n  /**\n   * giftValue: Estimated value of the gift in GHS (for record-keeping)\n   */\n  giftValue: number\n  /**\n   * paymentMode: How the gift was delivered (e.g., Cash, Mobile Money, Item)\n   */\n  paymentMode: string\n}\n\n// ===== Props & Emits =====\nimport { reactive, watch } from 'vue'\nconst props = defineProps<{ modelValue: GiftData }>()\nconst emit = defineEmits<{ (e: 'update:modelValue', value: GiftData): void }>()\n\n// ===== Local State (Controlled by Parent) =====\nconst localGift = reactive<GiftData>({ ...props.modelValue })\n\n// Watch for changes from parent and update local state\nwatch(\n  () => props.modelValue,\n  (newVal) => {\n    Object.assign(localGift, newVal)\n  }\n)\n\n// Watch for changes in localGift and emit to parent\nwatch(\n  localGift,\n  (newVal) => {\n    emit('update:modelValue', { ...newVal })\n  },\n  { deep: true }\n)\n</script>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "9iF2ATsvRmGIE28r6w8CV",
      "type": "rectangle",
      "x": -1810.6665649414062,
      "y": -657.3334655761719,
      "width": 2773.3334350585938,
      "height": 3340.0001525878906,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": {
        "type": 3
      },
      "seed": 156298038,
      "version": 56,
      "versionNonce": 1903975990,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1754482549329,
      "link": null,
      "locked": false
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}